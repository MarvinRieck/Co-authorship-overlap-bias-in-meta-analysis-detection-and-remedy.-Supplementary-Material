---
title: "Reanalysing Dinu et al. (2017)"
author: "Marvin Rieck"
format: pdf
editor: visual
root.dir: ""
---

```{r}
#| echo: false
library(knitr)
opts_chunk$set(fig.path='figure/', fig.align='center', fig.width=8, fig.height=8, fig.show='hold', cache=TRUE, tidy=F, tidy.opts=list(width.cutoff=60), size="small")
```

# 1. Data preparation

```{r}
#| label: dinu_data_prep
#| warning: false
library(officer)
dinu <- read.csv2("../Supplementary Data SD/SD 4.1 dinu2017_effect_sizes.csv")[,c(1:12)]
dinu_references <- docx_summary(read_docx("../Supplementary Data SD/SD 4.2 dinu2017_references.docx"))[c(2:102),]
rownames(dinu_references) <- 1:101
dinu_references$doc_index <- 1:101
dinu_authors <- read.table(text = as.character(dinu_references$text), sep = ".",
                           quote = "", fill = T)[-c(33, 65, 68, 92), 1]
dinu_authors <- gsub("-", "", dinu_authors)
dinu_authors <- gsub(" ", "", dinu_authors)
dinu_authors <- gsub("BabinskáK", "BabinskaK", dinu_authors)
dinu_authors <- gsub("BlazícekP", "BlazicekP", dinu_authors)
dinu_authors <- gsub("HoSC", "HoS", dinu_authors)
dinu_authors <- gsub("KlvanováJ", "KlvanovaJ", dinu_authors)
dinu_authors <- gsub("KrajcovicováKudláckováM", "KrajcovicovaKudlackovaM", dinu_authors)
dinu_authors <- gsub("KwokTK", "KwokT", dinu_authors)
dinu_authors <- gsub("MannJI", "MannJ", dinu_authors)
dinu_authors <- gsub("WooJL", "WooJ", dinu_authors)

dinu_author_list <- unique(unlist((strsplit(dinu_authors, "\\,"))))
#sort(dinu_author_list)

dinu$authors <- strsplit(dinu_authors, "\\,")[dinu$study_id]
dinu$study_id <- as.factor(dinu$study_id)
dinu$mean_veg <- as.numeric(dinu$mean_veg)
dinu$sd_veg <- as.numeric(dinu$sd_veg)
dinu$mean_omni <- as.numeric(dinu$mean_omni)
dinu$sd_omni <- as.numeric(dinu$sd_omni)
```

# 2. Networks

## 2.1. Bipartite edges

```{r}
#| label: dinu_bipartite_edges
dinu_studies <- dinu[!duplicated(dinu$study_id), ]
dinu_bipartite_edges <- lapply(dinu_studies$authors,
                               function(x){dinu_author_list %in% x})
dinu_bipartite_edges <- do.call("cbind", dinu_bipartite_edges)
rownames(dinu_bipartite_edges) <- dinu_author_list
```

## 2.2. Co-author overlap network

```{r}
#| label: dinu_coauthor_overlap_network
#| warning: false
library(statnet)
dinu_shared_authors <- t(dinu_bipartite_edges) %*% dinu_bipartite_edges
dinu_network <- as.network(dinu_shared_authors, directed = F)
network.vertex.names(dinu_network) <- unique(dinu$study)
par(mar = c(0,0,0,0))
plot.network(dinu_network, edge.col = "black",
             edge.lwd = dinu_shared_authors)
X_geo.dist <- geodist(dinu_network)
```

# 3. Analysis

## 3.1. Effect sizes

```{r}
#| label: dinu_effect_sizes
#| warning: false
library(metafor)
library(dplyr)
X_effect <- escalc(measure = "SMD", m1i = mean_veg, m2i = mean_omni,
                      sd1i = sd_veg, sd2i = sd_omni, n1i = n_veg, n2i = n_omni,
                      data = dinu)
slab <- rep(dinu$Reference, times = count(group_by(X_effect, study_id))$n)
```

## 3.2. Correlogram

```{r}
#| label: dinu_correlogram
X_effect_dist_mat <- as.matrix(stats::dist(X_effect$yi))
X_effect_sim_mat <- 1 - (X_effect_dist_mat/max(X_effect_dist_mat))
X_geo_dist_mat <- X_geo.dist$gdist
colnames(X_geo_dist_mat) <- 1:ncol(X_geo_dist_mat)
effects_per_study <- X_effect %>% group_by(study_id) %>% count()

geo_dist_vec <- vector()
for(i in 1:length(unique(dinu$study_id))){
  geo_dist_vec <- c(geo_dist_vec, rep(rep(X_geo_dist_mat[i, ],
                                          times = effects_per_study$n),
                                      times = effects_per_study$n[i]))
}
X_geo_dist_mat_full <- matrix(data = geo_dist_vec, ncol = nrow(X_effect),
                              nrow = nrow(X_effect))
colnames(X_geo_dist_mat_full) <- 1:ncol(X_geo_dist_mat_full)

X_mantel_corlog <- ncf::mantel.correlog(X_geo_dist_mat_full, X_effect_sim_mat,
                                      increment = 1, resamp = 1)
plot(X_mantel_corlog)
tail(X_mantel_corlog$correlation, n = 1)
```

## 3.3. Similarity matrices

### 3.3.1. Inv.geo

```{r}
#| label: dinu_similarity_matrix_invgeo
X_inv.geo <- 1 - tail(X_mantel_corlog$correlation, n = 1) *
  X_geo.dist$gdist / max(X_geo.dist$gdist[which(is.finite(X_geo.dist$gdist))])
X_inv.geo[X_inv.geo == -Inf] <- 0
hist(X_inv.geo[X_inv.geo > 0], main = "inv.geo values > 0")
```

### 3.3.2. Jaccard

```{r}
#| label: dinu_similarity_matrix_jaccard
jaccard <- function(a, b){
    intersection = length(intersect(a, b))
    union = length(a) + length(b) - intersection
    return(intersection/union)
}

X_jaccard_matrix <- matrix(data = NA, ncol = length(unique(dinu$study_id)),
                           nrow = length(unique(dinu$study_id)))
for(i in 1:length(unique(dinu$study_id))){
  for(j in 1:length(unique(dinu$study_id))){
    X_jaccard_matrix[i, j] <- jaccard(dinu$authors[[i]], dinu$authors[[j]])
  }
}
colnames(X_jaccard_matrix) <- 1:ncol(X_jaccard_matrix)
hist(X_jaccard_matrix[X_jaccard_matrix > 0], main = "Jaccard values > 0")
```

```{r}
#| label: dinu_similarity_matrix_jaccard_correlogram
jaccard_vec <- vector()
for(i in 1:length(unique(dinu$study_id))){
  jaccard_vec <- c(jaccard_vec, rep(rep(X_jaccard_matrix[i, ],
                                          times = effects_per_study$n),
                                      times = effects_per_study$n[i]))
}
X_jaccard_mat_full <- matrix(data = jaccard_vec, ncol = 502, nrow = 502)
colnames(X_jaccard_mat_full) <- 1:ncol(X_jaccard_mat_full)

X_mantel_corlog_jaccard <- ncf::mantel.correlog(X_jaccard_mat_full, X_effect_sim_mat,
                                      increment = .1, resamp = 1)
plot(X_mantel_corlog_jaccard)
head(X_mantel_corlog_jaccard$correlation, n = 1)
```

### 3.3.3. Inv.geo + Jaccard

```{r}
#| label: dinu_similarity_matrix_invgeo_jaccard
X_invgeo_jaccard <- X_inv.geo + X_jaccard_matrix
colnames(X_invgeo_jaccard) <- 1:ncol(X_invgeo_jaccard)
hist(X_invgeo_jaccard[X_invgeo_jaccard > 0],
     main = "Combination of inv.geo and jaccard > 0")
```

## 3.4. RMA

### 3.4.1. Preparation

```{r}
#| label: dinu_rma
#| warning: false
library(dplyr)
colnames(X_inv.geo) <- 1:ncol(X_inv.geo)
X_effect$study_id.phyl <- X_effect$study_id
X_effect <- X_effect[order(X_effect$study_id), ]
X_effect <- X_effect %>%
  group_by(study_id) %>%
  mutate(obs = row_number())
X_effect$obs <- as.factor(X_effect$obs)

library(igraph)
X_effect$membership <- NA
walktrap <- graph_from_adjacency_matrix(dinu_shared_authors) |> cluster_walktrap()
counts <- table(X_effect$study_id)
X_effect$membership <- as.factor(rep(walktrap$membership, times = counts))
```

### 3.4.2. Null model

```{r}
#| label: dinu_null_model
#| eval: false
dinu.rma.null <- rma.mv(yi, V = vi,
                        mods = ~ measure,
                        random = list(~1|study_id/obs),
                      data = X_effect)
save(dinu.rma.null, file = "dinu.rma.null.Rdata")
```

### 3.4.3. Inv.geo model

```{r}
#| label: dinu_invgeo_model
#| eval: false
dinu.rma.full.invgeo <- rma.mv(yi, V = vi, mods = ~ measure,
                               random = list(~1|study_id/obs,
                                                         ~1|study_id.phyl),
              R = list(study_id.phyl = dinu_inv.geo), data = X_effect)
save(dinu.rma.full.invgeo, file = "dinu.rma.full.invgeo.Rdata")
```

### 3.4.4. Jaccard model

```{r}
#| label: dinu_jaccard_model
#| eval: false
dinu.rma.full.jaccard <- rma.mv(yi, V = vi, mods = ~ measure,
                               random = list(~1|study_id/obs,
                                                         ~1|study_id.phyl),
              R = list(study_id.phyl = X_jaccard_matrix), data = X_effect)
save(dinu.rma.full.jaccard, file = "dinu.rma.full.jaccard.Rdata")
```

### 3.4.5. Invgeo jaccard model

```{r}
#| label: dinu_invgeo_jaccard_model
#| eval: false
dinu.rma.full.invgeo_jaccard <- rma.mv(yi, V = vi, mods = ~ measure,
                               random = list(~1|study_id/obs,
                                                         ~1|study_id.phyl),
              R = list(study_id.phyl = X_invgeo_jaccard), data = X_effect)
save(dinu.rma.full.invgeo_jaccard, file = "dinu.rma.full.invgeo_jaccard.Rdata")
```

### 3.4.6. Summary

```{r}
#| label: dinu_rma_all
load("dinu.rma.null.Rdata")
load("dinu.rma.full.invgeo.Rdata")
load("dinu.rma.full.jaccard.Rdata")
load("dinu.rma.full.invgeo_jaccard.Rdata")
summary(dinu.rma.null)
summary(dinu.rma.full.invgeo)
summary(dinu.rma.full.jaccard)
summary(dinu.rma.full.invgeo_jaccard)
```

## 3.5. Plots

### 3.5.1. Model comparison

```{r}
#| label: dinu_model_comparison_plot
mod_comp <- data.frame("model" = rep(c("Null model", "Invgeo model",
                                       "Jaccard model", "Invgeo jaccard model"),
                                     each = 6),
                       "type" = rep(c("blood glucose", "bmi", "chol",
                                      "hdl_chol", "ldl_chol", "triglycerides"),
                                    times = 4),
                       "beta" = c(dinu.rma.null$beta, dinu.rma.full.invgeo$beta,
                                  dinu.rma.full.jaccard$beta,
                                  dinu.rma.full.invgeo_jaccard$beta),
                       "se" = c(dinu.rma.null$se, dinu.rma.full.invgeo$se,
                                dinu.rma.full.jaccard$se,
                                dinu.rma.full.invgeo_jaccard$se))
mod_comp <- mod_comp[order(mod_comp$type), ]

forest(mod_comp$beta, vi = mod_comp$se^2, slab = mod_comp$model,
       header = "Effect size and CI of the different models for all moderators")
```

### 3.5.2. Adjusted effect sizes

#### 3.5.2.1. Calculation

```{r}
#| label: dinu_adjusted_effects
#| warning: false
############################ invgeo ##############################
X_ranef_invgeo <- ranef(dinu.rma.full.invgeo)
rep_vec <- X_effect %>% group_by(study_id) %>% count()

intercepts_invgeo <- ifelse(X_effect$measure == "blood_glucose", dinu.rma.full.invgeo$beta[1],
        ifelse(X_effect$measure == "bmi", dinu.rma.full.invgeo$beta[2],
        ifelse(X_effect$measure == "cholesterol", dinu.rma.full.invgeo$beta[3],
        ifelse(X_effect$measure == "hdl_cholesterol", dinu.rma.full.invgeo$beta[4],
        ifelse(X_effect$measure == "ldl_cholesterol", dinu.rma.full.invgeo$beta[5],
        ifelse(X_effect$measure == "triglycerides", dinu.rma.full.invgeo$beta[6],
               NA))))))

adjusted_effects_invgeo <- intercepts_invgeo + rep(X_ranef_invgeo$study_id$intrcpt, rep_vec$n) +
  X_ranef_invgeo$`study_id/obs`$intrcpt

ses_invgeo <- ifelse(X_effect$measure == "blood_glucose", dinu.rma.full.invgeo$se[1],
        ifelse(X_effect$measure == "bmi", dinu.rma.full.invgeo$se[2],
        ifelse(X_effect$measure == "cholesterol", dinu.rma.full.invgeo$se[3],
        ifelse(X_effect$measure == "hdl_cholesterol", dinu.rma.full.invgeo$se[4],
        ifelse(X_effect$measure == "ldl_cholesterol", dinu.rma.full.invgeo$se[5],
        ifelse(X_effect$measure == "triglycerides", dinu.rma.full.invgeo$se[6],
               NA))))))
adjusted_effects_invgeo_se <- ses_invgeo + rep(X_ranef_invgeo$study_id$se, rep_vec$n) + X_ranef_invgeo$`study_id/obs`$se

ad_effect_dist_mat_invgeo <- as.matrix(dist(adjusted_effects_invgeo))
ad_effect_sim_mat_invgeo <- 1 - (ad_effect_dist_mat_invgeo/max(ad_effect_dist_mat_invgeo))

ad_mantel_corlog_geodist <- ncf::mantel.correlog(X_geo_dist_mat_full, ad_effect_sim_mat_invgeo, increment = 1, resamp = 0)
############################ jaccard ##############################
intercepts_jaccard <- ifelse(X_effect$measure == "blood_glucose", dinu.rma.full.jaccard$beta[1],
        ifelse(X_effect$measure == "bmi", dinu.rma.full.jaccard$beta[2],
        ifelse(X_effect$measure == "cholesterol", dinu.rma.full.jaccard$beta[3],
        ifelse(X_effect$measure == "hdl_cholesterol", dinu.rma.full.jaccard$beta[4],
        ifelse(X_effect$measure == "ldl_cholesterol", dinu.rma.full.jaccard$beta[5],
        ifelse(X_effect$measure == "triglycerides", dinu.rma.full.jaccard$beta[6],
               NA))))))

X_ranef_jaccard <- ranef(dinu.rma.full.jaccard)

adjusted_effects_jaccard <- intercepts_jaccard + rep(X_ranef_jaccard$study_id$intrcpt, rep_vec$n) +
  X_ranef_jaccard$`study_id/obs`$intrcpt

ses_jaccard <- ifelse(X_effect$measure == "blood_glucose", dinu.rma.full.jaccard$se[1],
        ifelse(X_effect$measure == "bmi", dinu.rma.full.jaccard$se[2],
        ifelse(X_effect$measure == "cholesterol", dinu.rma.full.jaccard$se[3],
        ifelse(X_effect$measure == "hdl_cholesterol", dinu.rma.full.jaccard$se[4],
        ifelse(X_effect$measure == "ldl_cholesterol", dinu.rma.full.jaccard$se[5],
        ifelse(X_effect$measure == "triglycerides", dinu.rma.full.jaccard$se[6],
               NA))))))

adjusted_effects_jaccard_se <- ses_jaccard + rep(X_ranef_jaccard$study_id$se, rep_vec$n) + X_ranef_jaccard$`study_id/obs`$se

ad_effect_dist_mat_jaccard <- as.matrix(dist(adjusted_effects_jaccard))
ad_effect_sim_mat_jaccard <- 1 - (ad_effect_dist_mat_jaccard/max(ad_effect_dist_mat_jaccard))

ad_mantel_corlog_jaccard <- ncf::mantel.correlog(X_jaccard_mat_full, ad_effect_sim_mat_jaccard, increment = .1, resamp = 0)
```

#### 3.5.2.2. Correlogram

```{r}
#| label: dinu_correlogram_adjusted
#| fig.width: 12
#| fig.height: 12
#################### CIs for invgeo ###########################
######## raw ##########
corlog_CI_invgeo <- data.frame("low" = NA, "high" = NA)
for(i in 1:length(X_mantel_corlog$correlation)){
  corlog_CI_invgeo[i, 1] <- CIr(X_mantel_corlog$correlation[i], X_mantel_corlog$n[i])[1]
  corlog_CI_invgeo[i, 2] <- CIr(X_mantel_corlog$correlation[i], X_mantel_corlog$n[i])[2]
}
######## adjusted #####
corlog_CI_ad_invgeo <- data.frame("low" = NA, "high" = NA)
for(i in 1:length(ad_mantel_corlog_geodist$correlation)){
  corlog_CI_ad_invgeo[i, 1] <- CIr(ad_mantel_corlog_geodist$correlation[i], ad_mantel_corlog_geodist$n[i])[1]
  corlog_CI_ad_invgeo[i, 2] <- CIr(ad_mantel_corlog_geodist$correlation[i], ad_mantel_corlog_geodist$n[i])[2]
}
#################### CIs for jaccard ###########################
######## raw ##########
corlog_CI_jaccard <- data.frame("low" = NA, "high" = NA)
for(i in 1:length(X_mantel_corlog_jaccard$correlation)){
  corlog_CI_jaccard[i, 1] <- CIr(X_mantel_corlog_jaccard$correlation[i], X_mantel_corlog_jaccard$n[i])[1]
  corlog_CI_jaccard[i, 2] <- CIr(X_mantel_corlog_jaccard$correlation[i], X_mantel_corlog_jaccard$n[i])[2]
}
######## adjusted #####
corlog_CI_ad_jaccard <- data.frame("low" = NA, "high" = NA)
for(i in 1:length(ad_mantel_corlog_jaccard$correlation)){
  corlog_CI_ad_jaccard[i, 1] <- CIr(ad_mantel_corlog_jaccard$correlation[i], ad_mantel_corlog_jaccard$n[i])[1]
  corlog_CI_ad_jaccard[i, 2] <- CIr(ad_mantel_corlog_jaccard$correlation[i], ad_mantel_corlog_jaccard$n[i])[2]
}
################## plot ##########################################
# combined plot:
windowsFonts(A = windowsFont("Times New Roman"))
par(mar = c(4,4,4,1), family = "A", cex = 2)
plot(X_mantel_corlog$correlation, ylim = c(.5, 1), ylab = "Effect size similarity",
                                     xlab = "Geodesic distance", main = "", cex = 0.5, las = 1, xaxt = "n")
# raw invgeo:
arrows(1, y0 = corlog_CI_invgeo[1, 1], y1 = corlog_CI_invgeo[1, 2], length = .05, angle = 90, code = 3)
arrows(2, y0 = corlog_CI_invgeo[2, 1], y1 = corlog_CI_invgeo[2, 2], length = .05, angle = 90, code = 3)
arrows(3, y0 = corlog_CI_invgeo[3, 1], y1 = corlog_CI_invgeo[3, 2], length = .05, angle = 90, code = 3)
arrows(4, y0 = corlog_CI_invgeo[4, 1], y1 = corlog_CI_invgeo[4, 2], length = .05, angle = 90, code = 3)
arrows(5, y0 = corlog_CI_invgeo[5, 1], y1 = corlog_CI_invgeo[5, 2], length = .05, angle = 90, code = 3)
lines(1:4, X_mantel_corlog$correlation[1:4], lwd = 2)
# adjusted invgeo:
lines(1:4, ad_mantel_corlog_geodist$correlation[1:4], lwd = 2, lty = 2)
points(1:5, ad_mantel_corlog_geodist$correlation, lty = 2, cex = .5)
arrows(1, y0 = corlog_CI_ad_invgeo[1, 1], y1 = corlog_CI_ad_invgeo[1, 2], length = .05, angle = 90, code = 3, lty = 2)
arrows(2, y0 = corlog_CI_ad_invgeo[2, 1], y1 = corlog_CI_ad_invgeo[2, 2], length = .05, angle = 90, code = 3, lty = 2)
arrows(3, y0 = corlog_CI_ad_invgeo[3, 1], y1 = corlog_CI_ad_invgeo[3, 2], length = .05, angle = 90, code = 3, lty = 2)
arrows(4, y0 = corlog_CI_ad_invgeo[4, 1], y1 = corlog_CI_ad_invgeo[4, 2], length = .05, angle = 90, code = 3, lty = 2)
arrows(5, y0 = corlog_CI_ad_invgeo[5, 1], y1 = corlog_CI_ad_invgeo[5, 2], length = .05, angle = 90, code = 3, lty = 2)
# raw jaccard
lines(seq(1, 4, len = 9), rev(X_mantel_corlog_jaccard$correlation)[1:9], lwd = 2, col = "blue")
points(seq(1, 4, len = 9), rev(X_mantel_corlog_jaccard$correlation)[1:9], col = "blue", cex = .5)
points(5.05, X_mantel_corlog_jaccard$correlation[1], col = "blue", cex = .5)
arrows(seq(1, 4, len = 9)[9], y0 = corlog_CI_jaccard[2, 1], y1 = corlog_CI_jaccard[2, 2], length = .05, angle = 90, code = 3, col = "blue")
arrows(seq(1, 4, len = 9)[8], y0 = corlog_CI_jaccard[3, 1], y1 = corlog_CI_jaccard[3, 2], length = .05, angle = 90, code = 3, col = "blue")
arrows(seq(1, 4, len = 9)[7], y0 = corlog_CI_jaccard[4, 1], y1 = corlog_CI_jaccard[4, 2], length = .05, angle = 90, code = 3, col = "blue")
arrows(seq(1, 4, len = 9)[6], y0 = corlog_CI_jaccard[5, 1], y1 = corlog_CI_jaccard[5, 2], length = .05, angle = 90, code = 3, col = "blue")
arrows(seq(1, 4, len = 9)[5], y0 = corlog_CI_jaccard[6, 1], y1 = corlog_CI_jaccard[6, 2], length = .05, angle = 90, code = 3, col = "blue")
arrows(seq(1, 4, len = 9)[4], y0 = corlog_CI_jaccard[7, 1], y1 = corlog_CI_jaccard[7, 2], length = .05, angle = 90, code = 3, col = "blue")
arrows(seq(1, 4, len = 9)[3], y0 = corlog_CI_jaccard[8, 1], y1 = corlog_CI_jaccard[8, 2], length = .05, angle = 90, code = 3, col = "blue")
arrows(seq(1, 4, len = 9)[2], y0 = corlog_CI_jaccard[9, 1], y1 = corlog_CI_jaccard[9, 2], length = .05, angle = 90, code = 3, col = "blue")
arrows(seq(1, 4, len = 9)[1], y0 = corlog_CI_jaccard[10, 1], y1 = corlog_CI_jaccard[10, 2], length = .05, angle = 90, code = 3, col = "blue")
arrows(5.05, y0 = corlog_CI_jaccard[1, 1], y1 = corlog_CI_jaccard[1, 2], length = .05, angle = 90, code = 3, col = "blue")
# adjusted jaccard
lines(seq(1, 4, len = 9), rev(ad_mantel_corlog_jaccard$correlation)[1:9], lty = 2, lwd = 2, col = "blue")
points(seq(1, 4, len = 9), rev(ad_mantel_corlog_jaccard$correlation)[1:9], col = "blue", cex = .5)
points(5.05, ad_mantel_corlog_jaccard$correlation[1], col = "blue", cex = .5)
arrows(seq(1, 4, len = 9)[9], y0 = corlog_CI_ad_jaccard[2, 1], y1 = corlog_CI_ad_jaccard[2, 2], length = .05, angle = 90, code = 3, col = "blue", lty = 2)
arrows(seq(1, 4, len = 9)[8], y0 = corlog_CI_ad_jaccard[3, 1], y1 = corlog_CI_ad_jaccard[3, 2], length = .05, angle = 90, code = 3, col = "blue", lty = 2)
arrows(seq(1, 4, len = 9)[7], y0 = corlog_CI_ad_jaccard[4, 1], y1 = corlog_CI_ad_jaccard[4, 2], length = .05, angle = 90, code = 3, col = "blue", lty = 2)
arrows(seq(1, 4, len = 9)[6], y0 = corlog_CI_ad_jaccard[5, 1], y1 = corlog_CI_ad_jaccard[5, 2], length = .05, angle = 90, code = 3, col = "blue", lty = 2)
arrows(seq(1, 4, len = 9)[5], y0 = corlog_CI_ad_jaccard[6, 1], y1 = corlog_CI_ad_jaccard[6, 2], length = .05, angle = 90, code = 3, col = "blue", lty = 2)
arrows(seq(1, 4, len = 9)[4], y0 = corlog_CI_ad_jaccard[7, 1], y1 = corlog_CI_ad_jaccard[7, 2], length = .05, angle = 90, code = 3, col = "blue", lty = 2)
arrows(seq(1, 4, len = 9)[3], y0 = corlog_CI_ad_jaccard[8, 1], y1 = corlog_CI_ad_jaccard[8, 2], length = .05, angle = 90, code = 3, col = "blue", lty = 2)
arrows(seq(1, 4, len = 9)[2], y0 = corlog_CI_ad_jaccard[9, 1], y1 = corlog_CI_ad_jaccard[9, 2], length = .05, angle = 90, code = 3, col = "blue", lty = 2)
arrows(5.05, y0 = corlog_CI_ad_jaccard[1, 1], y1 = corlog_CI_ad_jaccard[1, 2], length = .05, angle = 90, code = 3, col = "blue", lty = 2)
# rest:
abline(v = 4.48)
abline(v = 4.52)
axis(side = 1, labels = c(0:3, Inf), at = 1:5)
text(c(1,2,3,4,4.9), .5,
     labels = c("n = 1626", "n = 2251", "n = 860", "n = 120,966"), cex = .5)
axis(side = 3, labels = round(rev(X_mantel_corlog_jaccard$mean.of.class),2), at = c(seq(1, 4, len = 9), 5))
text(c(seq(1, 4, len = 9), 4.9), 1,
     labels = c("n = 2410", "n = 58", "n = 78", "n = 247", "n = 70", "n = 384", "n = 224", "n = 579", "n = 340", "n = 121,361"),
     cex = .5)
mtext("Jaccard Similarity", side = 3, line = 2, cex = 2)
legend(x = 1, y = .6, legend = c("raw effects (gdist.)", "adj. effects (gdist.)", "raw effects (jaccard)", "adj. effects (jaccard)"), bty = "n", lty = c(1, 2, 1, 2), ncol = 2,
       pch = 1, col = c("black", "black", "blue", "blue"))
```

#### 3.5.2.3. Forest plot

```{r}
#| label: dinu_forest_plot
#| fig.width: 12
#| fig.height: 12
set.seed(42)
studies_to_plot <- sample(1:502, 20, replace = F)
par(mar = c(4,4,1,1), family = "A")
forest(dinu.rma.full.invgeo$yi[studies_to_plot], vi = dinu.rma.full.invgeo$vi[studies_to_plot], ylim = c(-6.5, 23),
       xlim = c(-25,12), header = T, slab = X_effect$study[studies_to_plot])
addpoly(adjusted_effects_invgeo[studies_to_plot], sei = adjusted_effects_invgeo_se[studies_to_plot], row = 1:20,
        col = "gray", annotate = F, border = F)
par(new = TRUE, family = "A")
forest(dinu.rma.full.invgeo$yi[studies_to_plot], dinu.rma.full.invgeo$vi[studies_to_plot], xlim = c(-25, 12), ylim = c(-6.5, 23),
       annotate = F, xlab = "", slab = NA)
addpoly(subset(mod_comp, model == "Invgeo model")$beta, sei = subset(mod_comp, model == "Invgeo model")$se, row = -1:-6, mlab = paste("RE Model (Adjusted Effect): ", subset(mod_comp, model == "Invgeo model")$type), col = "gray")
addpoly(subset(mod_comp, model == "Null model")$beta, sei = subset(mod_comp, model == "Null model")$se, row = -1:-6+.5, mlab = paste("RE Model: ", subset(mod_comp, model == "Invgeo model")$type))
abline(h = 0)
```

## 3.8. CV

```{r}
#| label: dinu_cv
#| eval: false
#| echo: false
cv_prep <- dinu_effect %>% distinct(study_id, membership)
cv_tab <- table(cv_prep$membership)
cv_cluster <- which(cv_tab > 3)
RMSE <- NA
replacement <- list(blood_glucose = c(0,0,0,0,0),
                    bmi = c(1,0,0,0,0),
                    cholesterol = c(0,1,0,0,0),
                    hdl_cholesterol = c(0,0,1,0,0),
                    ldl_cholesterol = c(0,0,0,1,0),
                    triglycerides = c(0,0,0,0,1))
for(i in cv_cluster){
 mod <- rma.mv(yi, V = vi, mods = ~ measure,
               random = list(~1|study_id/obs),
               data = dinu_effect[-which(dinu_effect$membership == i), ])
 pred_vec <- dinu_effect[which(dinu_effect$membership == i), 12]
 pred_vec2 <- unlist(lapply(pred_vec, function(x) replacement[as.character(x)]))
 pred_mat <- matrix(data = pred_vec2, ncol = 5, nrow = nrow(pred_vec), byrow = T)
 preds <- predict(mod, newmods = pred_mat)
 RMSE[i] <- sqrt(mean((dinu_effect$yi[which(dinu_effect$membership == i)] - preds$pred)^2))
}
save(RMSE, file = "RMSE_over3_dinu.rda")
     
### for comparison with all clusters
RMSE_all_dinu <- NA
for(i in 1:63){
 mod <- rma.mv(yi, V = vi, mods = ~ measure,
               random = list(~1|study_id/obs),
               data = dinu_effect[-which(dinu_effect$membership == i), ])
 pred_vec <- dinu_effect[which(dinu_effect$membership == i), 12]
 pred_vec2 <- unlist(lapply(pred_vec, function(x) replacement[as.character(x)]))
 pred_mat <- matrix(data = pred_vec2, ncol = 5, nrow = nrow(pred_vec), byrow = T)
 preds <- predict(mod, newmods = pred_mat)
 RMSE_all_dinu[i] <- sqrt(mean((dinu_effect$yi[which(dinu_effect$membership == i)] - preds$pred)^2))
}
save(RMSE_all_dinu, file = "RMSE_all_dinu.rda")
```

```{r}
#| label: dinu_cv_plots
#| eval: false
#| echo: false
load("RMSE_over3_dinu.rda")
barplot(RMSE)

load("RMSE_all_dinu.rda")
barplot(RMSE_all_dinu)
```

## 3.9. Shuffle and reanalyse

```{r}
#| label: dinu_shuffle
#| eval: false
#| echo: false
dinu_shuffle_ids <- sample(unique(X_effect$study_id))
dinu_shuffle <- X_effect
dinu_shuffle <- dinu_shuffle %>% group_by(study_id) %>% mutate("study_id" = dinu_shuffle_ids[match(study_id, unique(dinu_shuffle$study_id))]) %>% ungroup()
dinu_shuffle$study_id.phyl <- dinu_shuffle$study_id

dinu.shuffle.rma.null <- rma.mv(yi, V = vi,
                        mods = ~ measure,
                        random = list(~1|study_id/obs),
                      data = dinu_shuffle)
save(dinu.shuffle.rma.null, file = "dinu.shuffle.rma.null.Rdata")

dinu.shuffle.rma.full.invgeo <- rma.mv(yi, V = vi, mods = ~ measure,
                               random = list(~1|study_id/obs,
                                                         ~1|study_id.phyl),
              R = list(study_id.phyl = dinu_inv.geo), data = dinu_shuffle)
save(dinu.shuffle.rma.full.invgeo, file = "dinu.shuffle.rma.full.invgeo.Rdata")
```

```{r}
#| label: dinu_shuffle_results
#| eval: false
#| echo: false
load("dinu.shuffle.rma.null.Rdata")
load("dinu.shuffle.rma.full.invgeo.Rdata")
summary(dinu.shuffle.rma.null)
summary(dinu.shuffle.rma.full.invgeo)
```
